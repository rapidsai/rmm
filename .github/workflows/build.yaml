name: build

on:
  push:
    branches:
      - "branch-*"
    tags:
      - v[0-9][0-9].[0-9][0-9].[0-9][0-9]
  workflow_dispatch:
    inputs:
      branch:
        description: |
          branch: git branch the workflow run targets.
          Required even when 'sha' is provided because it is also used for organizing artifacts.
        required: true
        type: string
      date:
        description: "date: Date (YYYY-MM-DD) this run is for. Used to organize artifacts produced by nightly builds"
        required: true
        type: string
      sha:
        description: "sha: full git commit SHA to check out"
        required: true
        type: string
      build_type:
        description: "build_type: one of [branch, nightly, pull-request]"
        type: string
        default: nightly

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  telemetry-setup:
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      OTEL_SERVICE_NAME: "build-rmm"
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Telemetry setup
        # This gate is here and not at the job level because we need the job to not be skipped,
        # since other jobs depend on it.
        if: ${{ vars.TELEMETRY_ENABLED == 'true' }}
        uses: rapidsai/shared-actions/telemetry-dispatch-stash-base-env-vars@main
  cpp-build:
    needs: [telemetry-setup]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-cpp-build.yaml@cuda13.0
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      script: ci/build_cpp.sh
      sha: ${{ inputs.sha }}
  python-build:
    needs: [telemetry-setup, cpp-build]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-build.yaml@cuda13.0
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      script: ci/build_python.sh
      sha: ${{ inputs.sha }}
  upload-conda:
    needs: [cpp-build, python-build]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-upload-packages.yaml@cuda13.0
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
  docs-build:
    if: github.ref_type == 'branch'
    needs: [python-build]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@cuda13.0
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}
      node_type: "gpu-l4-latest-1"
      arch: "amd64"
      container_image: "rapidsai/ci-conda:25.10-latest"
      script: ci/build_docs.sh
  wheel-build-cpp:
    needs: [telemetry-setup]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@cuda13.0
    with:
      matrix_filter: group_by([.ARCH, (.CUDA_VER|split(".")|map(tonumber)|.[0])]) | map(max_by(.PY_VER|split(".")|map(tonumber)))
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}
      script: ci/build_wheel_cpp.sh
      package-name: librmm
      package-type: cpp
  wheel-build-python:
    needs: [telemetry-setup, wheel-build-cpp]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@cuda13.0
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}
      script: ci/build_wheel_python.sh
      package-name: rmm
      package-type: python
  wheel-publish-cpp:
    needs: wheel-build-cpp
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-publish.yaml@cuda13.0
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}
      package-name: librmm
      package-type: cpp
  wheel-publish-python:
    needs: wheel-build-python
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-publish.yaml@cuda13.0
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}
      package-name: rmm
      package-type: python
  telemetry-summarize:
    # This job must use a self-hosted runner to record telemetry traces.
    runs-on: linux-amd64-cpu4
    needs: [wheel-publish-cpp, wheel-publish-python, upload-conda, docs-build]
    if: ${{ vars.TELEMETRY_ENABLED == 'true' && !cancelled() }}
    continue-on-error: true
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Telemetry summarize
        uses: rapidsai/shared-actions/telemetry-dispatch-summarize@main
