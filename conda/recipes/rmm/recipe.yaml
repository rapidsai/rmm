# Copyright (c) 2019-2025, NVIDIA CORPORATION.

# bashlet to use for this:
# IFS=- read -r RAW_VERSION GIT_DESCRIBE_NUMBER GIT_DESCRIBE_HASH <<< $(git describe --tags)
# Takes string like "v25.02.00a-49-g77dadb88" and splits on the `-` and drops the result into three variables

context:
  version: ${{ env.get("RAPIDS_PACKAGE_VERSION") }}
  cuda_version: ${{ (env.get('RAPIDS_CUDA_VERSION') | split('.'))[:2] | join(".") }}
  cuda_major: ${{ (env.get('RAPIDS_CUDA_VERSION') | split('.'))[0] }}
  date_string: ${{ env.get("RAPIDS_DATE_STRING") }}
  GIT_DESCRIBE_HASH: ${{ env.get("GIT_DESCRIBE_HASH") }}
  GIT_DESCRIBE_NUMBER: ${{ env.get("GIT_DESCRIBE_NUMBER") }}

package:
  name: rmm
  version: ${{ version }}

source:
  - path: ../../..

build:
  number: ${{ GIT_DESCRIBE_NUMBER }}
  string: cuda${{ cuda_major }}_py${{ py_version }}_${{ date_string }}_${{ GIT_DESCRIBE_HASH }}_${{ GIT_DESCRIBE_NUMBER }}
  script:
    file: build.sh
    secrets:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      - CMAKE_C_COMPILER_LAUNCHER
      - CMAKE_CUDA_COMPILER_LAUNCHER
      - CMAKE_CXX_COMPILER_LAUNCHER
      - CMAKE_GENERATOR
      - CMAKE_MAKE_PROGRAM
      - SCCACHE_BUCKET
      - SCCACHE_IDLE_TIMEOUT
      - SCCACHE_REGION
      - if: linux64
        then:
          - SCCACHE_S3_KEY_PREFIX=rmm-linux64
      - if: aarch64
        then:
          - SCCACHE_S3_KEY_PREFIX=rmm-aarch64
      - SCCACHE_S3_USE_SSL
      - SCCACHE_S3_NO_CREDENTIALS

requirements:
  build:
    - cmake ${{ cmake_version }}
    - ninja
    - ${{ compiler('c') }}
    - ${{ compiler('cxx') }}
    - if: cuda_major == "11"
      then:
        - ${{ compiler('cuda') }} =${{ cuda_version }}
      else:
        - ${{ compiler('cuda') }}
    - cuda-version =${{ cuda_version }}
    - ${{ stdlib("c") }}
  host:
    - cuda-version =${{ cuda_version }}
    - if: cuda_major == "11"
      then:
        - cudatoolkit
        - cuda-python >=11.8.5,<12.0a0
      else:
        - cuda-cudart-dev
        - cuda-python >=12.6.2,<13.0a0
    - cython >=3.0.0
    - rapids-build-backend >=0.3.0,<0.4.0.dev0
    - librmm =${{ version }}
    - python >=3.7,<3.12
    - pip
    - scikit-build-core >=0.10.0
  run:
    - if: cuda_major == "11"
      then:
        - cudatoolkit
        - cuda-python >=11.8.5,<12.0a0
      else:
        - cuda-cudart
        - cuda-python >=12.6.2,<13.0a0
    - ${{ pin_compatible('cuda-version', upper_bound='x', lower_bound='x') }}
    - numba >=0.59.1,<0.61.0a0
    - numpy >=1.23,<3.0a0
    - python >=3.7,<3.12
  ignore_run_exports:
    from_package:
      - ${{ compiler('cuda') }}
      - cuda-python
      - if: not (cuda_major == "11")
        then: "cuda-cudart-dev"
        else: "cuda-version"

tests:
  - python:
      imports:
        - rmm
      pip_check: false

about:
  homepage: https://rapids.ai/
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: rmm library
